
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_PPCA.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_PPCA.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_PPCA.py:


=============================
Interpolating missing data with probabalistic PCA
=============================

When you pass a matrix with with missing data, hypertools will attempt to
fill in the values using probabalistic principal components analysis (PPCA).
Here is an example where we generate some synthetic data, remove some of the
values, and then use PPCA to interpolate those missing values. Then, we plot
both the original and data with missing values together to see how it performed.

.. GENERATED FROM PYTHON SOURCE LINES 13-37



.. image-sg:: /auto_examples/images/sphx_glr_plot_PPCA_001.png
   :alt: plot PPCA
   :srcset: /auto_examples/images/sphx_glr_plot_PPCA_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/jmanning/hypertools/hypertools/tools/format_data.py:140: UserWarning: Missing data: Inexact solution computed with PPCA (see https://github.com/allentran/pca-magic for details)
      warnings.warn('Missing data: Inexact solution computed with PPCA (see https://github.com/allentran/pca-magic for details)')
    /Users/jmanning/hypertools/hypertools/plot/draw.py:90: UserWarning: linestyle is redundantly defined by the 'linestyle' keyword argument and the fmt string "-" (-> linestyle='-'). The keyword argument will take precedence.
      ax.plot(data[i][:, 0], data[i][:, 1], data[i][:, 2], fmt[i], **ikwargs)

    <hypertools.datageometry.DataGeometry object at 0x13271be90>





|

.. code-block:: Python


    # Code source: Andrew Heusser
    # License: MIT

    # import
    from scipy.linalg import toeplitz
    import numpy as np
    from copy import copy
    import hypertools as hyp

    # simulate data
    K = 10 - toeplitz(np.arange(10))
    data1 = np.cumsum(np.random.multivariate_normal(np.zeros(10), K, 250), axis=0)
    data2 = copy(data1)

    # simulate missing data
    missing = .1
    inds = [(i,j) for i in range(data2.shape[0]) for j in range(data2.shape[1])]
    missing_data = [inds[i] for i in np.random.choice(int(len(inds)), int(len(inds)*missing))]
    for i,j in missing_data:
        data2[i,j]=np.nan

    # plot
    hyp.plot([data1, data2], linestyle=['-',':'], legend=['Original', 'PPCA'])


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.036 seconds)


.. _sphx_glr_download_auto_examples_plot_PPCA.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_PPCA.ipynb <plot_PPCA.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_PPCA.py <plot_PPCA.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_PPCA.zip <plot_PPCA.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
