
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_normalize.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_normalize.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_normalize.py:


=============================
Normalizing your features
=============================

Often times its useful to normalize (z-score) you features before plotting, so
that they are on the same scale.  Otherwise, some features will be weighted more
heavily than others when doing PCA, and that may or may not be what you want.
The `normalize` kwarg can be passed to the plot function.  If `normalize` is
set to 'across', the zscore will be computed for the column across all of the
lists passed.  Conversely, if `normalize` is set to 'within', the z-score will
be computed separately for each column in each list.  Finally, if `normalize` is
set to 'row', each row of the matrix will be zscored.  Alternatively, you can use
the normalize function found in tools (see the third example).

.. GENERATED FROM PYTHON SOURCE LINES 17-42



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_normalize_001.png
         :alt: Normalized across datasets
         :srcset: /auto_examples/images/sphx_glr_plot_normalize_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_normalize_002.png
         :alt: Normalized within dataset
         :srcset: /auto_examples/images/sphx_glr_plot_normalize_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_normalize_003.png
         :alt: Normalized across row
         :srcset: /auto_examples/images/sphx_glr_plot_normalize_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <hypertools.datageometry.DataGeometry object at 0x146659130>





|

.. code-block:: Python


    # Code source: Andrew Heusser
    # License: MIT

    # import
    import hypertools as hyp
    import numpy as np
    import matplotlib.pyplot as plt

    # simulate data
    cluster1 = np.random.multivariate_normal(np.zeros(3), np.eye(3), size=100)
    cluster2 = np.random.multivariate_normal(np.zeros(3)+10, np.eye(3), size=100)
    data = [cluster1, cluster2]

    # plot normalized across lists
    hyp.plot(data, '.', normalize='across', title='Normalized across datasets')

    # plot normalized within list
    hyp.plot(data, '.', normalize='within', title='Normalized within dataset')

    # normalize by row
    normalized_row = hyp.normalize(data, normalize='row')

    # plot normalized by row
    hyp.plot(normalized_row, '.', title='Normalized across row')


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.079 seconds)


.. _sphx_glr_download_auto_examples_plot_normalize.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_normalize.ipynb <plot_normalize.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_normalize.py <plot_normalize.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_normalize.zip <plot_normalize.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
